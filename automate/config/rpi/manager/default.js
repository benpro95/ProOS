var tid;var ractive;var model;var tiptid;var first;$.postJSON=function(a,b){return $.ajax({type:"POST",url:a,data:JSON.stringify(b),contentType:"application/json",dataType:"json"})};function update(){ractive.set(model)}function navigate(b){b=b.substr(b.indexOf("#"));var a=b.split("/");ractive.set("view.page.*",false);ractive.set("view.tab.*",false);if(a.length>=2){ractive.set("view.page."+a[1],true)}if(a.length>=3){ractive.set("view.tab."+a[2],true)}else{ractive.set("view.tab.default",true)}}function getStatusView(a){if(a.interfaces.ad.status=="Disabled"){a.interfaces.ad.view={icon:"ban",style:"",text:"Interface is disabled"}}else{if(a.interfaces.ad.status=="Started"){a.interfaces.ad.view={icon:"check",style:"ok",text:"Interface is listening"}}else{a.interfaces.ad.view={icon:"times",style:"error",text:a.interfaces.ad.error}}}if(a.interfaces.wifi.status=="Disabled"){a.interfaces.wifi.view={icon:"ban",style:"",text:"Interface is disabled"}}else{if(a.interfaces.wifi.status=="Started"){a.interfaces.wifi.view={icon:"check",style:"ok",text:"Interface is listening"}}else{a.interfaces.wifi.view={icon:"times",style:"error",text:a.interfaces.wifi.error}}}if(a.interfaces.bt.status=="Disabled"){a.interfaces.bt.view={icon:"ban",style:"",text:"Interface is disabled"}}else{if(a.interfaces.bt.status=="Started"){a.interfaces.bt.view={icon:"check",style:"ok",text:"Interface is listening"}}else{if(a.interfaces.bt.status=="NotSupported"){a.interfaces.bt.view={icon:"ban",style:"",text:"Not supported on current OS"}}else{if(a.interfaces.bt.status=="NotAvailable"){a.interfaces.bt.view={icon:"ban",style:"",text:"Radio is not available"}}else{a.interfaces.bt.view={icon:"times",style:"error",text:a.interfaces.bt.error}}}}}if(a.network.lan.available){a.network.lan.view={icon:"check",style:"ok",text:"Detected"}}else{a.network.lan.view={icon:"times",style:"error",text:"Not Detected"}}if(a.network.wan.available){a.network.wan.view={icon:"check",style:"ok",text:"Detected"}}else{a.network.wan.view={icon:"times",style:"error",text:"Not Detected"}}if(a.firewall.available){if(a.firewall.allowed){a.firewall.view={icon:"check",style:"ok",text:"Access is allowed"}}else{a.firewall.view={icon:"times",style:"error",text:"Access not allowed. Check firewall settings..."}}}a.input.view={icon:"check",style:"ok",text:a.input.mode};return a}function onConnected(){fetchRemotes();fetchConfig();fetchRemotes()}function fetchStatus(){model.view.restarting=false;$.getJSON("/system/status",function(d){if(model.view.restarting){return}if(!model.view.connected||first){if(!first){tip("Connected")}model.view.connected=true;model.view.restarting=false;first=false;onConnected()}model.status=getStatusView(d);update()}).fail(function(d,f,e){if(model.view.restarting){return}if(model.view.connected){model.view.connected=false;model.view.log.data=[];tip("Disconnected")}model.status.interfaces.wifi.view={icon:"times",style:"",text:"Checking..."};model.status.interfaces.bt.view={icon:"times",style:"",text:"Checking..."};model.status.interfaces.ad.view={icon:"times",style:"",text:"Checking..."};model.status.network.lan.view={icon:"times",style:"",text:"Checking..."};model.status.network.wan.view={icon:"times",style:"",text:"Checking..."};model.status.firewall.view={icon:"times",style:"",text:"Checking..."};model.status.input.view={icon:"times",style:"",text:"Checking..."};update()}).always(function(){if(model.view.restarting){return}tid=setTimeout(fetchStatus,1000)});var a=model.view.log;var b="/"+[a.lines,a.level,a.filter].join("/");var c=function(e){var d=e.split(" ");return{date:d[0],time:d[1],tag:model.log_levels[_.trim(d[2],"()")].name,msg:_.slice(d,3).join(" ")}};if(!a.paused){$.getJSON("/system/log"+b,function(f){var d=f.data;var e=_(d).map(c).value();var h=$("#log-data");if(h.size()===0){return}var g=a.data=_.sortByOrder(e,["data","time"],[false,false]);h.html(templateRender("#tlogline",{log:g}));a.last_url_postfix=b})}}var templateRender=function(b,c){var a=new Ractive({template:b,data:c});return a.toHTML()};function sortRemotes(d,c){if(d.id=="Relmtech.Basic Input"){return -1}if(c.id=="Relmtech.Basic Input"){return 1}d=d.name.toLowerCase();c=c.name.toLowerCase();if(d<c){return -1}if(d>c){return 1}return 0}function fetchRemotes(){$.getJSON("/system/remotes",function(a){a.sort(sortRemotes);model.remotes=a;update()})}function fetchConfig(){$.getJSON("/system/config",function(a){model.config=a;update()})}function tip(a){ractive.set("view.tip",a);var b=$(".tips");b.hide();clearTimeout(tiptid);b.slideDown(100,function(){tiptid=setTimeout(function(){$(".tips").slideUp(100)},2000)})}function saveConfig(){model.view.unsaved={};$.postJSON("/system/config",model.config);restart()}function restart(){clearTimeout(tid);model.view.restarting=true;model.view.connected=false;model.view.log.data=[];update();$.get("/system/restart");tid=setTimeout(fetchStatus,3000)}function isRemoteDisabled(a){return !isRemoteEnabled(a)}function isRemoteEnabled(a){return $.inArray(a,model.config.loader.disabled)==-1}function isRemoteUnsaved(a){return model.view.unsaved[a]==true}$(document).ready(function(){first=true;log="";model={year:new Date().getFullYear(),view:{restarting:false,connected:true,showhidden:false,tip:"",page:{status:true},tab:{dashboard:true},unsaved:{},dragdrop:undefined,log:{last_url_postfix:undefined,data:[],lines:30,filter:"",paused:false,level:6}},log_levels:{F:{name:"fatal",value:1},C:{name:"critical",value:2},E:{name:"error",value:3},W:{name:"warning",value:4},N:{name:"notice",value:5},I:{name:"info",value:6},D:{name:"debug",value:7},T:{name:"trace",value:8}},view_log_levels:[{name:"Fatal",value:1},{name:"Error",value:3},{name:"Warning",value:4},{name:"Info",value:6},{name:"Trace",value:8}],isRemoteDisabled:isRemoteDisabled,isRemoteEnabled:isRemoteEnabled,isRemoteUnsaved:isRemoteUnsaved};ractive=new Ractive({el:"container",template:"#tmain",data:model});ractive.on({navigate:function(a){navigate(a.node.getAttribute("href"))},"save-config":function(a){saveConfig()},"cancel-config":function(a){tip("Reverted changes");fetchConfig()},"remove-path":function(b){var a=b.node.getAttribute("data-index");model.config.loader.paths.splice(a,1);update()},"add-path":function(a){model.config.loader.paths.push("");update()},restart:function(a){restart()},reload:function(a){$.get("/system/reload");tip("Reloading remotes")},"enable-all-remotes":function(a){model.config.loader.disabled=[];update();saveConfig()},"disable-all-remotes":function(c){for(var a=0;a<model.remotes.length;a++){var b=model.remotes[a];if($.inArray(b.id,model.config.loader.disabled)==-1){if(!b.hidden||model.view.showhidden){model.config.loader.disabled.push(b.id)}}}update();saveConfig()},"update-check":function(a){tip("Checking for updates");$.getJSON("/system/update-force",function(b){if(b.Available){tip("Update available")}else{tip("No updates available")}fetchConfig()})},"update-clear":function(a){$.get("/system/update-clear");fetchConfig()},"enable-remote":function(b){var c=b.node.getAttribute("data-id");var a=model.config.loader.disabled.indexOf(c);if(a>-1){model.config.loader.disabled.splice(a,1);model.view.unsaved[c]=!(model.view.unsaved[c]==true);update()}else{tip("Already enabled")}},"disable-remote":function(b){var c=b.node.getAttribute("data-id");var a=model.config.loader.disabled.indexOf(c);if(a==-1){model.config.loader.disabled.push(c);model.view.unsaved[c]=!(model.view.unsaved[c]==true);update()}else{tip("Already disabled")}},"save-remotes":function(a){saveConfig()},"configure-remote":function(b){var a=b.node.getAttribute("data-index");model.view.remote=model.remotes[a];update()},"configure-users":function(a){navigate("/web/#/settings/users")},"add-user":function(a){model.config.security.users.push({username:"",password:""});update()},"remove-user":function(b){var a=b.node.getAttribute("data-index");model.config.security.users.splice(a,1);update()},"save-remote-settings":function(a){tip("Saving settings");$.postJSON("/system/remote-settings/"+model.view.remote.id,model.view.remote.settings);delete model.view.remote;update()},"cancel-remote-settings":function(a){delete model.view.remote;update()},"add-remote-setting":function(a){model.view.remote.settings.push({key:"",value:""});update()},"remove-remote-setting":function(b){var a=b.node.getAttribute("data-index");model.view.remote.settings.splice(a,1);update()},"toggle-wan-address":function(a){$("#wan-address").find("a").toggleClass("hide")},"fetch-status":function(a){fetchStatus()},"toggle-pause-log":function(a){model.view.log.paused=!model.view.log.paused;update()},"file-drag-start":function(b){var a=(b.original||{});if(!a.dataTransfer){return false}if(a.preventDefault){a.preventDefault()}a.dataTransfer.effectAllowed="copy";model.view.dragdrop={dragging:true,uploading:false,result:false};update();return false},"file-drag-dismiss":function(a){model.view.dragdrop=undefined;update();setTimeout(fetchRemotes,500)},"file-drag-cancel":function(a){if(!model.view.dragdrop){return}if(!model.view.dragdrop.dragging){return}model.view.dragdrop=undefined;update()},"file-drag-drop":function(f){var b=f.original;var a=model.view.dragdrop;a.dragging=false;a.uploading=true;update();var d=b.dataTransfer||{};var c=d.files||[];_.forEach(c,function(h,g){var e=new FileReader();$(e).on("loadend",function(k,j){var i=this.result;$.ajax({url:"/system/remote/add?filename="+h.name,type:"POST",contentType:"application/octet-stream",data:i,dataType:"json",processData:false}).done(function(l){a.uploading=false;a.result=l;update();$.get("/system/reload")})});e.readAsArrayBuffer(h)});if(b.preventDefault){b.preventDefault()}}});if(window.location.hash){navigate(window.location.hash)}fetchStatus()});