#!/bin/bash
###########################################################

## Read the 2nd Argument
ARG2=$2

## Read the 1st Argument
case "$1" in

boot)
## File Share
systemctl start autofs
## Arduino COMs
ln -sf /dev/ttyUSB0 /dev/zterm-tty
systemctl start rpi-ztermcom
## AirPlay Support
systemctl start rpi-airplay
## Bluetooth Audio
systemctl start hciuart
systemctl start bluetooth
systemctl start bt-agent@hci0
systemctl start bluealsa-aplay
## Blink LED
python3 /opt/rpi/blinkled.py &&
## Reset Bluetooth Connections
/opt/rpi/init resetbt
exit
;;

relax)
## Pi audio input
echo "C" > /dev/zterm
## Play sound in loop
systemctl stop rpi-relaxloop
systemctl set-environment rpi_relaxmode=$ARG2
systemctl start rpi-relaxloop
## Blink LED
python3 /opt/rpi/blinkled.py &&
exit
;;

stoprelax)
## Apple TV input
echo "B" > /dev/zterm
systemctl stop rpi-relaxloop
## Blink LED
python3 /opt/rpi/blinkled.py &&
exit
;;

sleepmode)
## Toggle Sounds On/Off 
if (systemctl is-active --quiet rpi-relaxloop.service); then
  ## Apple TV input
  echo "B" > /dev/zterm
  echo "Stopping playback..."
  systemctl stop rpi-relaxloop
else 
  ## Pi audio input
  echo "C" > /dev/zterm	
  echo "Starting sleep mode..."
  systemctl stop rpi-relaxloop
  systemctl set-environment rpi_relaxmode="coldwar"
  systemctl start rpi-relaxloop
fi
## Blink LED
python3 /opt/rpi/blinkled.py &&
exit
;;

toggletv)
echo "Toggling TV Power..."
echo "G" > /dev/zterm
## Blink LED
python3 /opt/rpi/blinkled.py &&
exit
;;

volup)
echo "Volume Up..."
echo "X" > /dev/zterm
exit
;;

voldwn)
echo "Volume Down..."
echo "Y" > /dev/zterm
exit
;;

volmute)
echo "Toggle Mute..."
echo "M" > /dev/zterm
## Blink LED
python3 /opt/rpi/blinkled.py &&
exit
;;

update-fw)
## Update Arduino over USB
rm -rf /opt/rpi/amp-fw/build
mkdir -p /opt/rpi/amp-fw/build
/opt/rpi/arduino-cli -v compile --fqbn arduino:avr:uno /opt/rpi/amp-fw/amp-fw.ino --build-path /opt/rpi/amp-fw/build
/opt/rpi/arduino-cli -v upload -p /dev/zterm-tty --fqbn arduino:avr:uno --input-dir /opt/rpi/amp-fw/build
exit
;;

*)
echo "Bedroom Pi"
echo "by Ben Provenzano III "
exit 1
;;
esac   
