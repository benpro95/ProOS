#!/bin/bash
###########################################################

## Arduino's Serial Port
ARDUINO_PORT="ttyUSB0"

## Read Command-Line Arguments
ARG1=$1
ARG2=$2

BLINKLED(){
## Blink front-panel LED
nohup python3 /opt/rpi/blinkled.py >/dev/null 2>&1 &
}

OPTA_MODE(){
  echo "02002" > /dev/zterm
}

OPTB_MODE(){
  echo "02001" > /dev/zterm
}

COAX_MODE(){
  echo "02003" > /dev/zterm
}

case "$ARG1" in

boot)
## Amplifier communication
ln -sf /dev/$ARDUINO_PORT /dev/zterm-tty
## Bluetooth audio
systemctl start hciuart
systemctl start bluetooth
systemctl start bt-agent@hci0
systemctl start bluealsa-aplay
BLINKLED
## SMB file share client
sleep 10
systemctl start autofs
exit
;;

serialmon)
/opt/rpi/arduino-cli monitor -p /dev/$ARDUINO_PORT \
  -b arduino:avr:uno --config 9600
exit
;;

relax)
## Play sound in loop
COAX_MODE
systemctl stop rpi-relaxloop
systemctl set-environment rpi_relaxmode=$ARG2
systemctl start rpi-relaxloop
BLINKLED
exit
;;

stoprelax)
## Apple TV input
OPTA_MODE
systemctl stop rpi-relaxloop
BLINKLED
exit
;;

sleepmode)
## Toggle relax sounds
if (systemctl is-active --quiet rpi-relaxloop.service); then
  ## Apple TV input
  OPTA_MODE
  echo "Stopping playback..."
  systemctl stop rpi-relaxloop
else
  ## Pi audio input
  COAX_MODE
  echo "Starting sleep mode..."
  systemctl stop rpi-relaxloop
  systemctl set-environment rpi_relaxmode="fan"
  systemctl start rpi-relaxloop
fi
BLINKLED
exit
;;

opt-a)
OPTA_MODE
BLINKLED
exit
;;

opt-b)
OPTB_MODE
BLINKLED
exit
;;

coaxial)
COAX_MODE
BLINKLED
exit
;;

aux)
echo "02004" > /dev/zterm
BLINKLED
exit
;;

volup)
echo "03002" > /dev/zterm
BLINKLED
exit
;;

voldwn)
echo "03003" > /dev/zterm
BLINKLED
exit
;;

volmute)
echo "03001" > /dev/zterm
BLINKLED
exit
;;

poweron)
echo "01001" > /dev/zterm
BLINKLED
exit
;;

poweroff)
echo "01002" > /dev/zterm
BLINKLED
exit
;;

toggletv)
echo "01004" > /dev/zterm
BLINKLED
exit
;;

apd-on)
CACHE_PATH="/mnt/smb/Downloads/.legacy"
if [ -e "${CACHE_PATH}" ]; then
  BLINKLED
  ## cache folders
  mkdir -p "$CACHE_PATH/afp-db"
  mkdir -p "$CACHE_PATH/smb-wtmp"
  mkdir -p "$CACHE_PATH/smb-cache"
  ## enable access point mode
  nohup /etc/netmode.sh apd >/dev/null 2>&1 &
  ## enable SMB share server
  systemctl restart smbd
  systemctl restart nmbd
  ## enable AppleTalk server
  systemctl restart avahi-daemon
  systemctl restart netatalk
else
  echo "${CACHE_PATH} not found, exiting."
fi
exit
;;

apd-off)
BLINKLED
## disable access point mode
nohup /etc/netmode.sh client >/dev/null 2>&1 &
## disable SMB share server
systemctl stop smbd
systemctl stop nmbd
## disable AppleTalk server
systemctl stop netatalk
systemctl stop avahi-daemon
exit
;;

update-fw)
BLINKLED
## Stop Serial Communication
rm -rfv /dev/zterm-tty
## Update Arduino over USB
rm -rf /opt/rpi/amp-fw/build
mkdir -p /opt/rpi/amp-fw/build
/opt/rpi/arduino-cli -v compile --fqbn arduino:avr:uno \
  /opt/rpi/amp-fw/amp-fw.ino --build-path /opt/rpi/amp-fw/build
/opt/rpi/arduino-cli -v upload -p /dev/$ARDUINO_PORT \
  --fqbn arduino:avr:uno --input-dir /opt/rpi/amp-fw/build
## Start Serial Communication
ln -sf /dev/$ARDUINO_PORT /dev/zterm-tty
exit
;;

*)
echo "Bedroom Pi - by Ben Provenzano III "
echo "Enter valid command."
exit 1
;;
esac   
