#!/bin/bash
##
## CameraPi by Ben Provenzano III v1.5 #############
####################################################

## Manual Camera Control Function
CAMCTL () {
clear
REPLY=""
echo "(Manual Camera Control Menu)"
echo "(1) - disable IR filter shutter"
echo "(2) - enable IR filter shutter"
echo "(3) - disable IR LEDs"
echo "(4) - enable IR LEDs"
echo "(5) - disable power LED"
echo "(6) - enable power LED"
echo "(enter) exit manual control"
echo " "
read -p "select mode: " -n 1 -r
echo
##
if [[ $REPLY =~ ^[1]$ ]]
then
  ## Disable IR Filter (GPIO #17)
  gpio mode 0 out
  gpio write 0 1
  CAMCTL
fi
##
if [[ $REPLY =~ ^[2]$ ]]
then
  ## Enable IR Filter (GPIO #17)
  gpio mode 0 out
  gpio write 0 0
  CAMCTL
fi
##
if [[ $REPLY =~ ^[3]$ ]]
then
  ## Disable IR LEDs (GPIO #27)
  gpio mode 2 out
  gpio write 2 0
  CAMCTL
fi
##
if [[ $REPLY =~ ^[4]$ ]]
then
  ## Enable IR LEDs (GPIO #27)
  gpio mode 2 out
  gpio write 2 1
  CAMCTL
fi
##
if [[ $REPLY =~ ^[5]$ ]]
then
  ## Disable Red LED
  echo 1 | tee /sys/class/leds/led1/brightness > /dev/null 2> /dev/null
  CAMCTL
fi
##
if [[ $REPLY =~ ^[6]$ ]]
then
  ## Enable Red LED
  echo 0 | tee /sys/class/leds/led1/brightness > /dev/null 2> /dev/null
  CAMCTL
fi
echo "restarting auto IR Control..."
systemctl start rpi-ldr.service
exit
}

##################################

case "$1" in

boot)
## Video RAM Disk
mkdir -p /mnt/ramdisk
chmod 777 /mnt/ramdisk
mount -t tmpfs -o size=200m ramdisk /mnt/ramdisk
sleep 25
## Attach Server SMB Share
if ping -c 1 10.177.1.4 > /dev/null 2> /dev/null
then
  systemctl start autofs
  sleep 5.75
fi
## Google Drive
if [ ! -e /media/usb0/rclone ]; then
  echo "flash drive not connected, not starting rclone."
else
  systemctl start rpi-rclone
  sleep 5.75
fi
## Motion Server
systemctl start motion
## Cameras Cleanup Timer
systemctl start rpi-camcleanup.timer
## IR Control
systemctl start rpi-ldr.service
## Disable HDMI
/usr/bin/tvservice -o
exit
;;

camctl)
echo "stopping auto IR control..."
systemctl stop rpi-ldr.service
sleep 1.25
CAMCTL
exit
;;

redoff)
## Disable Red LED
echo 1 | tee /sys/class/leds/led1/brightness > /dev/null 2> /dev/null
exit
;;

redon)
## Enable Red LED
echo 0 | tee /sys/class/leds/led1/brightness > /dev/null 2> /dev/null
exit
;;

cpusb)
## Copy Videos on USB Drive to Server
mkdir -p /mnt/smb/Cameras/Current/PiCam-USB
rsync -a --progress /media/usb0/cameras/ /mnt/smb/Cameras/Current/PiCam-USB/
echo "videos can be found at '//files/Cameras/Current/PiCam-USB'"
read -p "delete videos from USB drive? (y/n) " -n 1 -r
echo
if [[ $REPLY =~ ^[yY]$ ]]
then
  rm -rfv /media/usb0/cameras
  mkdir -p /media/usb0/cameras
  chown -R motion:motion /media/usb0/cameras
  chmod -R 777 /media/usb0/cameras
fi
exit
;;

##################################
    
        *)
	      echo "CameraPi v1"
	      echo " by Ben Provenzano III"
	      echo " "
	      echo "camctl - manual camera control menu"
	      echo "cpusb - copy videos on USB drive to server"
	      echo " "
	      echo "enter a valid command argument."
        exit 1
        ;;
    esac   
