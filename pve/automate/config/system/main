#!/bin/bash
##
###########################################################
## Main Home Automation Script by Ben Provenzano III v18 ##
###########################################################
###########################################################
## Do not use the screen command in this script ##

CALLXMIT(){
#### ESP32 Transmit Function (APT Call)
## Set to "on" for HTML Xmit, or "off" for RS-232 Xmit
HTML="on"
## Xmit URL
XMIT_IP="10.177.1.17"
if [[ "$HTML" == "on" ]]; then
### Transmit to ESP32 WiFi MCU
/usr/bin/curl --silent --fail --ipv4 --no-buffer --max-time 30 \
 --retry 3 --retry-all-errors --retry-delay 1 --no-keepalive \
 --url "http://$XMIT_IP:80/xmit/$XMITCALL"
###  
else
### Transmit to RS-232 serial
/usr/bin/python2 - <<END
import serial
import termios
port = '/dev/ttyACM0'
f = open(port)
attrs = termios.tcgetattr(f)
attrs[2] = attrs[2] & ~termios.HUPCL
termios.tcsetattr(f, termios.TCSAFLUSH, attrs)
f.close()
se = serial.Serial()
se.baudrate = 9600
se.port = port
se.open()
se.write(str.encode('$XMITCALL'))
END
###
fi
XMITCALL=""
XMITCMD=""
XMITARG=""
return
}

XMIT(){
#### ESP32 Transmit Function (Command Translation)
## run ./main CMD (no state file created)
## run ./main CMD toggle (toggle on/off state & append on/off to end of serial command)
## run ./main CMD on (create state file & append on to end of serial command then send)
## run ./main CMD off (delete state file & append off to end of serial command then send)
## Do not use the screen command in this script ##
##### TOGGLE SECTION #####
if [[ "$XMITARG" == "on" ]]; then
  touch /var/lock/rpi/$XMITCMD.save
  XMITCMD=$XMITCMD"on"
fi
if [[ "$XMITARG" == "off" ]]; then
  rm -f /var/lock/rpi/$XMITCMD.save
  XMITCMD=$XMITCMD"off"
fi
if [[ "$XMITARG" == "toggle" ]]; then
  if [ ! -e /var/lock/rpi/$XMITCMD.save ]; then
   touch /var/lock/rpi/$XMITCMD.save
   XMITCMD=$XMITCMD"on"
  else
   rm -f /var/lock/rpi/$XMITCMD.save
   XMITCMD=$XMITCMD"off"
  fi
fi
##
##### FUNCTIONS SECTION ######
##
### HiFi Preamp 'Sony RMT-B118A Remote' Sony 20-bit
##
## Power
if [[ "$XMITCMD" == "pwrhifi" ]]; then
   ## Reset sub volume token
   rm -f /var/lock/rpi/subs.enabled 
   XMITCALL="irtx.sony20.691015"
   CALLXMIT
   return
fi
## Key 1
if [[ "$XMITCMD" == "dac" ]]; then
   XMITCALL="irtx.sony20.2887"
   CALLXMIT
   return
fi
## Key 2
if [[ "$XMITCMD" == "aux" ]]; then
   XMITCALL="irtx.sony20.527175"
   CALLXMIT
   return
fi
## Key 3
if [[ "$XMITCMD" == "phono" ]]; then
   XMITCALL="irtx.sony20.265031"
   CALLXMIT
   return
fi
## Key Stop
if [[ "$XMITCMD" == "mute" ]]; then
   XMITCALL="irtx.sony20.101191"
   CALLXMIT
   return
fi
## Key Rewind
if [[ "$XMITCMD" == "dwnf" ]]; then
   XMITCALL="irtx.sony20.887623"
   CALLXMIT
   return
fi
## Key Forward
if [[ "$XMITCMD" == "upf" ]]; then
   XMITCALL="irtx.sony20.232263"
   CALLXMIT
   return
fi
## Key Down
if [[ "$XMITCMD" == "dwnc" ]]; then
   XMITCALL="irtx.sony20.379719"
   CALLXMIT
   return
fi
## Key Up
if [[ "$XMITCMD" == "upc" ]]; then
   XMITCALL="irtx.sony20.641863"
   CALLXMIT
   return
fi
## Key Left
if [[ "$XMITCMD" == "preleft" ]]; then
   XMITCALL="irtx.sony20.904007"
   CALLXMIT
   return
fi
## Key Right
if [[ "$XMITCMD" == "preright" ]]; then
   XMITCALL="irtx.sony20.248647"
   CALLXMIT
   return
fi
## Key Display
if [[ "$XMITCMD" == "display" ]]; then
   XMITCALL="irtx.sony20.535367"
   CALLXMIT
   return
fi
## Key Backlight
if [[ "$XMITCMD" == "backlight" ]]; then
   XMITCALL="irtx.sony20.813895"
   CALLXMIT
   return
fi
## Key Menu
if [[ "$XMITCMD" == "menu" ]]; then
   XMITCALL="irtx.sony20.609095"
   CALLXMIT
   return
fi
##
### Class D Amp (Toshiba CT-90302 Remote) NEC 32-bit
##
## Mute Key
if [[ "$XMITCMD" == "subpwr" ]]; then
   XMITCALL="irtx.nec.50137335"
   CALLXMIT
   return
fi
##
## (0) Key
if [[ "$XMITCMD" == "subon" ]]; then
   XMITCALL="irtx.nec.50135295"
   CALLXMIT
   return
fi
##
## (1) Key
if [[ "$XMITCMD" == "suboff" ]]; then
   XMITCALL="irtx.nec.50167935"
   CALLXMIT
   return
fi
##
## Vol (+) Key
if [[ "$XMITCMD" == "subup" ]]; then
   XMITCALL="irtx.nec.50157735"
   CALLXMIT
   return
fi
##
## Vol (-) Key
if [[ "$XMITCMD" == "subdwn" ]]; then
   XMITCALL="irtx.nec.50165895"
   CALLXMIT
   return
fi
##
### DAM1021 DAC (Onn Soundbar Remote) NEC 32-bit
##
## USB Input (Music Button)
if [[ "$XMITCMD" == "usb" ]]; then
   XMITCALL="irtx.nec.-300872971"
   CALLXMIT
   return
fi
## Coaxial Input (Aux Button)
if [[ "$XMITCMD" == "coaxial" ]]; then
   XMITCALL="irtx.nec.-300816361"
   CALLXMIT
   return
fi
## Optical Input (TV Button)
if [[ "$XMITCMD" == "optical" ]]; then
   XMITCALL="irtx.nec.-300813811"
   CALLXMIT
   return
fi
## Auto Input (Play Button)
if [[ "$XMITCMD" == "inauto" ]]; then
   XMITCALL="irtx.nec.-300833701"
   CALLXMIT
   return
fi
##
## RF Power Controller (under dresser)
##
## Vintage Macs
if [[ "$XMITCMD" == "rfa1on" ]]; then
   XMITCALL="rftx.734733"
   CALLXMIT
   return
fi
if [[ "$XMITCMD" == "rfa1off" ]]; then
   XMITCALL="rftx.734734"
   CALLXMIT
   return
fi
## Dresser Lamp
if [[ "$XMITCMD" == "rfa2on" ]]; then
   XMITCALL="rftx.734731"
   CALLXMIT
   return
fi
if [[ "$XMITCMD" == "rfa2off" ]]; then
   XMITCALL="rftx.734732"
   CALLXMIT
   return
fi
## RetroPi
if [[ "$XMITCMD" == "rfa3on" ]]; then
   XMITCALL="rftx.734735"
   CALLXMIT
   return
fi
if [[ "$XMITCMD" == "rfa3off" ]]; then
   XMITCALL="rftx.734736"
   CALLXMIT
   return
fi
## ESP32 Toggle PC Power
if [[ "$XMITCMD" == "rfb3" ]]; then
   XMITCALL="fet.tgl.32"
   CALLXMIT
   return
fi
## RF Relay Controller Board 
if [[ "$XMITCMD" == "rfb1on" ]]; then
   XMITCALL="rftx.864341"
   CALLXMIT
   return
fi
if [[ "$XMITCMD" == "rfb1off" ]]; then
   XMITCALL="rftx.864342"
   CALLXMIT
   return
fi
if [[ "$XMITCMD" == "rfb2on" ]]; then
   XMITCALL="rftx.864343"
   CALLXMIT
   return
fi
if [[ "$XMITCMD" == "rfb2off" ]]; then
   XMITCALL="rftx.864344"
   CALLXMIT
   return
fi
if [[ "$XMITCMD" == "rfb3on" ]]; then
   XMITCALL="rftx.864345"
   CALLXMIT
   return
fi
if [[ "$XMITCMD" == "rfb3off" ]]; then
   XMITCALL="rftx.864346"
   CALLXMIT
   return
fi
## Main Lamp Controller
if [[ "$XMITCMD" == "rfc1on" ]]; then
   XMITCALL="rftx.834511"
   CALLXMIT
   return
fi
if [[ "$XMITCMD" == "rfc1off" ]]; then
   XMITCALL="rftx.834512"
   CALLXMIT
   return
fi
echo "invalid command!"
return
}

## Transmit POST request to host
CALLHTTP(){
/usr/bin/curl --silent --fail --ipv4 --no-buffer --max-time 15 \
 --retry 3 --retry-all-errors --retry-delay 1 --no-keepalive --data \
 "var=$CMDARG&arg=$CMD&action=main" http://$TARGET.local/exec.php
CMD=""
CMDARG=""
TARGET=""
return
}

#########################################################

## Read the 2nd argument
CMDARG=$2
## Read the 1st argument
CMD=$1

case "$1" in

relax)
### Relax Sounds Playback
if [ ! -e /var/lock/rpi/relaxrec.save ]; then
  TARGET="hifimini"
else
  TARGET="hifi"
  ## Optical Decoder Input
  XMITCMD="coaxial" ; XMIT 
  ## Preamp DAC Input
  XMITCMD="dac" ; XMIT 
fi
## Play Audio in Loop on System
CMD="relax"
CALLHTTP
exit
;;

stoprelax)
## Stop Relax Sounds
if [ ! -e /var/lock/rpi/relaxrec.save ]; then
  TARGET="hifimini"
else
  TARGET="hifi"
  ## USB Decoder Input
  XMITCMD="usb" ; XMIT
  ## Preamp DAC Input
  XMITCMD="dac" ; XMIT
fi
CMD="stoprelax"
CALLHTTP
exit
;;

### Relax Sounds Volume Up
relaxvup)
if [ ! -e /var/lock/rpi/relaxrec.save ]; then
  TARGET="hifimini"
  CMD="vup"	
  CALLHTTP
else
  XMITCMD="upc" ; XMIT
fi   
exit
;;

### Relax Sounds Volume Down
relaxvdwn)
if [ ! -e /var/lock/rpi/relaxrec.save ]; then
  TARGET="hifimini"
  CMD="vdwn"		
  CALLHTTP
else
  XMITCMD="dwnc" ; XMIT
fi
exit
;;

## Toggle Relax Sounds Playback Device
relaxhost)
if [ ! -e /var/lock/rpi/relaxrec.save ]; then
  touch /var/lock/rpi/relaxrec.save
else
  rm -f /var/lock/rpi/relaxrec.save 
fi
exit
;;

####################################
## Automated Multi-Functions

lights)
## Toggle Lamps
if [ ! -e /var/lock/rpi/lights.save ]; then
  touch /var/lock/rpi/lights.save
  ## Main Lamp
  XMITCMD="rfc1" ; XMITARG="on" ; XMIT
  ## Dresser Lamp
  XMITCMD="rfa2" ; XMITARG="on" ; XMIT
else
  ## Turn all lights off
  rm -f /var/lock/rpi/lights.save
  ## Main Lamp
  XMITCMD="rfc1" ; XMITARG="off" ; XMIT 
  ## Dresser Lamp
  XMITCMD="rfa2" ; XMITARG="off" ; XMIT 
fi
exit
;;

lightson)
## Turn all lights on
touch /var/lock/rpi/lights.save
## Main Lamp
XMITCMD="rfc1" ; XMITARG="on" ; XMIT 
## Dresser Lamp
XMITCMD="rfa2" ; XMITARG="on" ; XMIT 
exit
;;

lightsoff)
## Turn all lights off
rm -f /var/lock/rpi/lights.save
## Main Lamp
XMITCMD="rfc1" ; XMITARG="off" ; XMIT 
## Dresser Lamp
XMITCMD="rfa2" ; XMITARG="off" ; XMIT 
exit
;;

allon)
touch /var/lock/rpi/lights.save
## Main Lamp
XMITCMD="rfc1" ; XMITARG="on" ; XMIT 
## Dresser Lamp
XMITCMD="rfa2" ; XMITARG="on" ; XMIT 
## Desk Light
XMITCMD="rfb1" ; XMITARG="on" ; XMIT 
## LEDwalls
/opt/rpi/leds candle
sleep 2.5
/opt/rpi/leds fc 60
exit
;;

alloff)
## Turn all lights off
rm -f /var/lock/rpi/lights.save
## Main Lamp
XMITCMD="rfc1" ; XMITARG="off" ; XMIT 
## Dresser Lamp
XMITCMD="rfa2" ; XMITARG="off" ; XMIT 
## Desk Light
XMITCMD="rfb1" ; XMITARG="off" ; XMIT 
## Blank LEDwalls
/opt/rpi/leds stop
exit
;;

## Audio Power
hifion)
if ping -W 2 -c 1 hifi.local > /dev/null 2> /dev/null
then
  echo "hifi.local is online"
else
  XMITCMD="pwrhifi" ; XMIT 
fi
exit
;;
##
hifioff)
if ping -W 2 -c 1 hifi.local > /dev/null 2> /dev/null
then
  XMITCMD="pwrhifi" ; XMIT 
else
  echo "hifi.local is offline"
fi
exit
;;

## PC Power
pcon)
if ping -W 2 -c 1 wkst.home > /dev/null 2> /dev/null
then
  echo "wkst.home is online"
else
  XMITCMD="rfb3" ; XMIT 
fi
exit
;;
##
pcoff)
if ping -W 2 -c 1 wkst.home > /dev/null 2> /dev/null
then
  XMITCMD="rfb3" ; XMIT 
else
  echo "wkst.home is offline"
fi
exit
;;

submute)
if [ -e /var/lock/rpi/subs.enabled ]; then
  ### Subwoofer mute/disable
  XMITCMD="subpwr" ; XMIT 
fi
exit
;;

subup)
if [ -e /var/lock/rpi/subs.enabled ]; then
  ### Subwoofer volume up
  XMITCMD="subup" ; XMIT 
fi
exit
;;

subdwn)
if [ -e /var/lock/rpi/subs.enabled ]; then
  ### Subwoofer volume down
  XMITCMD="subdwn" ; XMIT 
fi
exit
;;

subs)
## Toggle volume control to subwoofers
if [ ! -e /var/lock/rpi/subs.enabled ]; then
   touch /var/lock/rpi/subs.enabled
else
   rm -f /var/lock/rpi/subs.enabled
fi
exit
;;

autodac)
## Reset volume tokens
rm -f /var/lock/rpi/subs.enabled
## Auto Decoder Input
XMITCMD="inauto" ; XMIT 
## Preamp DAC Input
XMITCMD="dac" ; XMIT 
exit
;;

usb)
## Reset volume tokens
rm -f /var/lock/rpi/subs.enabled
## USB Decoder Input
XMITCMD="usb" ; XMIT 
## Preamp DAC Input
XMITCMD="dac" ; XMIT 
exit
;;

## Coax Input
coax)
## Reset volume tokens
rm -f /var/lock/rpi/subs.enabled
## Coaxial Decoder Input
XMITCMD="coaxial" ; XMIT 
## Preamp DAC Input
XMITCMD="dac" ; XMIT 
exit
;;

## Optical Input
opt)
## Reset volume tokens
rm -f /var/lock/rpi/subs.enabled
## Optical Decoder Input
XMITCMD="optical" ; XMIT
## Preamp DAC Input
XMITCMD="dac" ; XMIT
exit
;;

roomon)
## Main Lamp On
XMITCMD="rfc1" ; XMITARG="on" ; XMIT 
## Dresser Lamp
XMITCMD="rfa2" ; XMITARG="on" ; XMIT 
## Desk Light
XMITCMD="rfb1" ; XMITARG="on" ; XMIT 
## PC Power On
if ping -W 2 -c 1 wkst.home > /dev/null 2> /dev/null
then
  echo "wkst.home is online"
else
  XMITCMD="rfb3" ; XMIT 
fi
## LEDwalls
/opt/rpi/leds prism
/opt/rpi/leds fc norm
exit
;;

roomoff)
## Main Lamp Off
XMITCMD="rfc1" ; XMITARG="off" ; XMIT 
## Dresser Lamp
XMITCMD="rfa2" ; XMITARG="off" ; XMIT 
## Desk Light
XMITCMD="rfb1" ; XMITARG="off" ; XMIT 
## PC Power Off
if ping -W 2 -c 1 wkst.home > /dev/null 2> /dev/null
then
  XMITCMD="rfb3" ; XMIT 
else
  echo "wkst.home is offline"
fi
## Audio System Power Off
if ping -W 2 -c 1 hifi.local > /dev/null 2> /dev/null
then
  XMITCMD="pwrhifi" ; XMIT 
else
  echo "hifi.home is offline"
fi
## Blank LEDwalls
/opt/rpi/leds stop
exit
;;

unifi)
## Toggle Unifi Controller
SYSDSTAT="$(systemctl is-active unifi.service)"
if [ "${SYSDSTAT}" = "active" ]; then
  echo "UniFi running, stopping service..."
  systemctl stop unifi
else 
  echo "UniFi not running, starting service..."  
  systemctl start unifi
  echo "access at 'https://automate.home:8443/' "
fi
exit
;;

### Examples of URL strings ###
# http://automate:9300/exec.php?var=&arg=lightson&action=main
# http://automate:9300/exec.php?var=&arg=lightsoff&action=main
# http://automate:9300/exec.php?var=prism&arg=video&action=leds
###############################

*) ###############################################
### If command not matched above, pass argument to Xmit function
XMITCMD="$CMD" ; XMITARG="$2" ; XMIT
exit 0 
  ;; #############################################
esac   
