#!/bin/bash
## Runs every 40 seconds on Proxmox
################################

## External Backup Drives
ZFSPOOL1="usb256-01" # SanDisk Ultra 256GB USB 3.0
ZFSPOOL2="usb128-01" # SanDisk Ultra 128GB USB 3.0
ZFSPOOL3="usb256-02" # SanDisk Ultra 256GB USB 3.0
ZFSPOOL4="usb128-02" # SanDisk Ultra 128GB USB 3.0
ZFSPOOL5="hdd4tb-01" # HGST 4GB Hard Drive (Oldest)
ZFSPOOL6="hdd4tb-02" # HGST 4GB Hard Drive (2017)
ZFSPOOL7="hdd4tb-03" # WD 4TB Blue Hard Drive (Newest)
ZFSPOOL8=""
ZFSPOOL9=""
ZFSPOOL10=""

## VM Log File
VMLOGFILE="/mnt/extbkps/keytmp/vmlog.txt"

## Server Log Directory
SYSLOGDIR="/mnt/pve/scratch/files/downloads"

### IMPORT ZFS ########################################   
if [ -e /mnt/extbkps/keytmp/pass.txt ]; then
###### Runs when file exists ##########################
  if [ ! -e /mnt/extbkps/keytmp/status.txt ]; then
    touch /mnt/extbkps/keytmp/status.txt
  else
    truncate -s 0 /mnt/extbkps/keytmp/status.txt
  fi
  echo ""
  for ((i=1; i<11; i++))
  do
    ZFSVAR0="ZFSPOOL$i"
    if [ "${!ZFSVAR0}" = "" ] || [ "${!ZFSVAR0}" = "datastore" ] || [ "${!ZFSVAR0}" = "tank" ] || [ "${!ZFSVAR0}" = "rpool" ] ; then
      echo "no pool specified."
      echo ""
    else
      echo "importing ZFS backup volume ${!ZFSVAR0}."
      zpool import ${!ZFSVAR0}
 	  zfs load-key -L file:///mnt/extbkps/keytmp/pass.txt ${!ZFSVAR0}/extbkp
	  zfs mount ${!ZFSVAR0}/extbkp
	  zpool status ${!ZFSVAR0}
	  echo ""
    fi
  done
  zfs list
  echo ""
  shred -n 2 -z -u /mnt/extbkps/keytmp/pass.txt
  echo "imported ZFS backup volumes"
fi
### EXPORT ZFS ########################################
if [ -e /mnt/extbkps/keytmp/unmount.txt ]; then
###### Runs when file exists ##########################
  echo ""
  for ((i=1; i<11; i++))
  do
    ZFSVAR1="ZFSPOOL$i"
    if [ "${!ZFSVAR1}" = "" ] || [ "${!ZFSVAR1}" = "datastore" ] || [ "${!ZFSVAR1}" = "tank" ] || [ "${!ZFSVAR1}" = "rpool" ] ; then
      echo "no pool specified."
      echo ""
    else
      echo "unmounting ZFS backup volume ${!ZFSVAR1}."
      zfs unmount /mnt/extbkps/${!ZFSVAR1}
      zpool export ${!ZFSVAR1}
      echo ""
    fi
  done
  zfs unload-key -a
  zpool status
  zfs list
  echo ""
  rm -f /mnt/extbkps/keytmp/unmount.txt
  echo "unmounted ZFS backup volumes"
  date
  echo ""
fi

### START VMs #########################################   
if [ -e /mnt/extbkps/keytmp/startunifi.txt ]; then
###### Runs when file exists ##########################
  rm -f /mnt/extbkps/keytmp/startunifi.txt
  if [ ! -e $VMLOGFILE ]; then
    touch $VMLOGFILE
  else
    truncate -s 0 $VMLOGFILE
  fi
  echo "starting unifi VM..." &>> $VMLOGFILE
  qm start 102 &>> $VMLOGFILE
  date &>> $VMLOGFILE
fi
#######################################################
if [ -e /mnt/extbkps/keytmp/startxana.txt ]; then
###### Runs when file exists ##########################
  rm -f /mnt/extbkps/keytmp/startxana.txt
  if [ ! -e $VMLOGFILE ]; then
    touch $VMLOGFILE
  else
    truncate -s 0 $VMLOGFILE
  fi
  echo "starting xana VM..." &>> $VMLOGFILE
  qm start 105 &>> $VMLOGFILE
  date &>> $VMLOGFILE
fi
#######################################################
if [ -e /mnt/extbkps/keytmp/startdev.txt ]; then
###### Runs when file exists ##########################
  rm -f /mnt/extbkps/keytmp/startdev.txt
  if [ ! -e $VMLOGFILE ]; then
    touch $VMLOGFILE
  else
    truncate -s 0 $VMLOGFILE
  fi
  echo "starting development VM..." &>> $VMLOGFILE
  qm start 103 &>> $VMLOGFILE
  date &>> $VMLOGFILE
fi

### Write Server Log ##################################   
if [ -e /mnt/extbkps/keytmp/createlog.txt ]; then
###### Runs when file exists ##########################
  rm -f /mnt/extbkps/keytmp/createlog.txt
  if [ -e $SYSLOGDIR ]; then
    if [ ! -e $SYSLOGDIR/Server.log ]; then
      touch $SYSLOGDIR/Server.log
    else
      truncate -s 0 $SYSLOGDIR/Server.log
    fi
    /usr/bin/sys-check > $SYSLOGDIR/Server.log 2>&1
    chmod 777 $SYSLOGDIR/Server.log
  fi  
fi

#######################################################
exit


