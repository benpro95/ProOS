#!/bin/bash
###########################################################
###### LED Effects Script by Ben Provenzano III v15 #######
###########################################################

## Read Input Arguments
VARA=$1
VARB=$2

############### FUNCTIONS ###############

## Stop LED processes
LEDSTOP(){
/usr/bin/curl --silent --output /dev/null -X POST http://127.0.0.1:9387/api/anim/stop
killall -q -s KILL -w pythproc java perl Xvfb
echo "Paused effects"
}

## RGB color
COLOR_FUNC(){
LEDSTOP
if [ -f "/tmp/ledstate.lock" ]; then
  echo "already running"
  exit
else
  touch /tmp/ledstate.lock
fi
/usr/bin/nice -n 10 /opt/rpi/colorscan "$VARA" | /opt/rpi/opc_client 127.0.0.1:7890
rm -f /tmp/ledstate.lock
}

## Perl effects
PERL_FUNC(){
LEDSTOP
if [ -f "/tmp/ledstate.lock" ]; then
  echo "already running"
  exit
else
  touch /tmp/ledstate.lock
fi
echo "Set LEDs to perl program $VARA"
export PERL5LIB=/opt/rpi
/usr/bin/perl /opt/rpi/$VARA.pl
rm -f /tmp/ledstate.lock
}

## Python effects
PYTH_FUNC(){
LEDSTOP
if [ -f "/tmp/ledstate.lock" ]; then
  echo "already running"
  exit
else
  touch /tmp/ledstate.lock
fi
echo "Set LEDs to python program $VARA"
if [ "$VARA" = "rave"  ] || [ "$VARA" = "chase" ]; then
  /usr/bin/nice -n 10 /opt/rpi/pythproc /opt/rpi/$VARA.py
else
  /usr/bin/nice -n 10 /opt/rpi/pythproc /opt/rpi/$VARA.py --layout /opt/rpi/wall.json	
fi
rm -f /tmp/ledstate.lock
}

############### START OF MAIN PROCESS ###############

## LEDsync Command Dispatcher (make sure .txt file has newline at end)
if [ -e /opt/rpi/ledsync.txt ]; then
  LEDFILE='/opt/rpi/ledsync.txt'
  exec 4<$LEDFILE
  while read -u4 PSYNC ; do
      echo "Sending $VARA command to $PSYNC LED server..."
      /usr/bin/screen -dm /usr/bin/curl -N -f -m 10 --silent --data "var=$VARB&arg=$VARA&action=leds" http://$PSYNC:9300/exec.php
      sleep 0.25
  done
fi

## Read LED Type
if [ ! -e /opt/rpi/ledtype.txt ]; then
  exit
fi
LEDTYPE=`cat /opt/rpi/ledtype.txt`

## Node.js effect parser
if [ ! -e /opt/rpi/effects/$LEDTYPE/$VARA.opc ]; then
  echo "Node effect not found looking for others.."
else
  LEDSTOP
  if [ -f "/tmp/ledstate.lock" ]; then
      echo "already running"
      exit
  else
      touch /tmp/ledstate.lock
  fi
  ln -sf /opt/rpi/effects/$LEDTYPE/$VARA.opc /opt/rpi/nodeopc/server/animations/opc
  /usr/bin/curl --silent --output /dev/null -d '{"playlistname":"Playlist"}' -H \
    "Content-Type: application/json" -X POST http://127.0.0.1:9387/api/playlists/play
  echo "Set LEDs to node.js effect"
  rm -f /tmp/ledstate.lock
  exit
fi

if [ "$VARA" = "fc" ]; then
  LEDSTOP
  if [ -f "/tmp/fcstate.lock" ]; then
    echo "already running"
    exit
  else
    touch /tmp/fcstate.lock
  fi
  systemctl set-environment rpi_ledtype=$LEDTYPE rpi_fcsetup=fc$VARB.json
  systemctl restart rpi-fcserver rpi-nodeopc
  echo "LEDs brightness changed to $VARB%"
  rm -f /tmp/fcstate.lock
  exit
fi

if [ "$VARA" = "stop" ]; then
  ## Clear Locks
  rm -f /tmp/ledstate.lock
  rm -f /tmp/fcstate.lock
  ## Don't exit here
fi

if [ "$VARA" = "pause" ]; then
  LEDSTOP
  exit
fi

## Python LED Effects
if [ "$VARA" = "rave" ] || [ "$VARA" = "chase" ] || \
   [ "$VARA" = "miami" ] || [ "$VARA" = "spark" ] || \
   [ "$VARA" = "stripes" ] || [ "$VARA" = "lava" ] ; then
  PYTH_FUNC
  exit
fi

## Perl Effects
if [ "$VARA" = "noise3" ] || [ "$VARA" = "blocks" ] || \
   [ "$VARA" = "mandelbrot" ] || [ "$VARA" = "multitomaton" ] || \
   [ "$VARA" = "ripple" ] || [ "$VARA" = "random" ] ; then
  PERL_FUNC
  exit
fi

## Java LED Effects

# Spectro Gain Adjust
if [ "$VARA" = "plus" ]; then
  export DISPLAY=":1"
  xdotool key plus
  exit
fi

if [ "$VARA" = "minus" ]; then
  export DISPLAY=":1"
  xdotool key minus
  exit
fi

if [ "$VARA" = "spectro" ]; then
  LEDSTOP
  if [ -f "/tmp/ledstate.lock" ]; then
      echo "already running"
      exit
  else
      touch /tmp/ledstate.lock
  fi
  /usr/bin/Xvfb :1 -screen 0 640x640x24 &
  sleep 1.0
  /opt/rpi/effects/spectro/SpectroGraph
  rm -f /tmp/ledstate.lock
  exit
fi

if [ "$VARA" = "rainbow" ]; then
  LEDSTOP
  if [ -f "/tmp/ledstate.lock" ]; then
      echo "already running"
      exit
  else
      touch /tmp/ledstate.lock
  fi
  /usr/bin/Xvfb :1 -screen 0 640x640x24 &
  sleep 1.0
  /opt/rpi/effects/rainbow/rainbow
  rm -f /tmp/ledstate.lock
  exit
fi

## Solid Color
COLOR_FUNC
exit 
